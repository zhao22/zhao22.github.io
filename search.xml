<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>BigDecimal封装</title>
      <link href="/2018/05/23/BigDecimal%E5%B0%81%E8%A3%85/"/>
      <url>/2018/05/23/BigDecimal%E5%B0%81%E8%A3%85/</url>
      <content type="html"><![CDATA[<h2 id="产生原因"><a href="#产生原因" class="headerlink" title="产生原因"></a>产生原因</h2><p>由于以下几点原因，我们需要对BigDecimal 进行封装。使用起来更方便。</p><ol><li>BigDecimal 参数为double 类型时，有可能会出现误差。</li><li>参数为空时，会抛出异常。这里默认为0。</li><li>除法运算时，若结果为无限小数，会抛出异常。<a id="more"></a><h2 id="API说明"><a href="#API说明" class="headerlink" title="API说明"></a>API说明</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// obj == null,所得值为0,obj 不能转换为数字,抛出转换异常。</span></span><br><span class="line"><span class="keyword">new</span> BigDecimalUtil(Object obj);</span><br><span class="line"><span class="comment">// 加法 obj处理同上</span></span><br><span class="line">add(Object obj);</span><br><span class="line"><span class="comment">// 减法 obj处理同上</span></span><br><span class="line">minus(Object obj);</span><br><span class="line"><span class="comment">// 乘法 obj处理同上</span></span><br><span class="line">times(Object obj);</span><br><span class="line"><span class="comment">// 除法 obj处理同上</span></span><br><span class="line">divide(Object obj);</span><br><span class="line"><span class="comment">// 转换为String</span></span><br><span class="line">toString();</span><br><span class="line"><span class="comment">// 按精度转换为String,roundMode参见BigDecimal精度模式</span></span><br><span class="line">toString(<span class="keyword">int</span> digit, <span class="keyword">int</span> roundMode);</span><br><span class="line"><span class="comment">// 转换为Double</span></span><br><span class="line">toDouble();</span><br><span class="line"><span class="comment">// 按精度转换为Double,roundMode参见BigDecimal精度模式</span></span><br><span class="line">toDouble(<span class="keyword">int</span> digit, <span class="keyword">int</span> roundMode);</span><br></pre></td></tr></table></figure></li></ol><h2 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">bigDecimalUtilIntroduce</span><span class="params">()</span></span>&#123;</span><br><span class="line">    assertEquals(String.valueOf(<span class="number">0.05</span>+<span class="number">0.01</span>),<span class="string">"0.060000000000000005"</span>);</span><br><span class="line">    BigDecimalUtil bigDecimalUtil = <span class="keyword">new</span> BigDecimalUtil(<span class="number">0.05</span>);</span><br><span class="line">    bigDecimalUtil.add(<span class="number">0.01</span>);</span><br><span class="line">    assertEquals(bigDecimalUtil.toString(),<span class="string">"0.06"</span>);</span><br><span class="line">    <span class="comment">// 长运算示例</span></span><br><span class="line">    assertEquals(<span class="keyword">new</span> BigDecimalUtil(<span class="number">0.05</span>).add(<span class="number">0.01</span>).minus(<span class="string">"3"</span>).times(<span class="number">6</span>).divide(<span class="number">3</span>).toString(),<span class="string">"-5.88"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BigDecimalUtil</span> </span>&#123;</span><br><span class="line">    <span class="comment">/** 当前值 */</span></span><br><span class="line">    <span class="keyword">private</span> BigDecimal value;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">BigDecimalUtil</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.value = <span class="keyword">new</span> BigDecimal(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">BigDecimalUtil</span><span class="params">(Object value)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.value = getBigDecimal(value);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/** 加 */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> BigDecimalUtil <span class="title">add</span><span class="params">(Object calc)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.value = <span class="keyword">this</span>.value.add(getBigDecimal(calc));</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/** 减 */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> BigDecimalUtil <span class="title">minus</span><span class="params">(Object calc)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.value = <span class="keyword">this</span>.value.subtract(getBigDecimal(calc));</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/** 乘 */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> BigDecimalUtil <span class="title">times</span><span class="params">(Object calc)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.value = <span class="keyword">this</span>.value.multiply(getBigDecimal(calc));</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/** 除 */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> BigDecimalUtil <span class="title">divide</span><span class="params">(Object calc)</span></span>&#123;</span><br><span class="line">       <span class="comment">// this.value = this.value.divide(getBigDecimal(calc));</span></span><br><span class="line">        <span class="keyword">this</span>.value = <span class="keyword">this</span>.value.divide(getBigDecimal(calc),MathContext.DECIMAL64);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/** 空处理 */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">ifNull</span><span class="params">(Object obj)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (obj == <span class="keyword">null</span> || (obj <span class="keyword">instanceof</span> java.lang.String &amp;&amp; obj == <span class="string">""</span>) ) ? <span class="string">"0"</span> : String.valueOf(obj);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/** 类型转换 */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> BigDecimal <span class="title">getBigDecimal</span><span class="params">(Object value)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(value <span class="keyword">instanceof</span> BigDecimalUtil)&#123;</span><br><span class="line">            BigDecimalUtil val = (BigDecimalUtil) value;</span><br><span class="line">            <span class="keyword">return</span> val.value;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> BigDecimal(ifNull(value));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/** 得到值 */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.value.toString();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">(<span class="keyword">int</span> digit, <span class="keyword">int</span> roundMode)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.value.setScale(digit, roundMode).toString();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">toDouble</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.value.doubleValue();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">toDouble</span><span class="params">(<span class="keyword">int</span> digit, <span class="keyword">int</span> roundMode)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.value.setScale(digit, roundMode).doubleValue();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">toInt</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.value.intValue();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> util 数学运算 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>中文阿拉伯数字相互转换</title>
      <link href="/2018/05/23/%E4%B8%AD%E6%96%87%E9%98%BF%E6%8B%89%E4%BC%AF%E6%95%B0%E5%AD%97%E7%9B%B8%E4%BA%92%E8%BD%AC%E6%8D%A2/"/>
      <url>/2018/05/23/%E4%B8%AD%E6%96%87%E9%98%BF%E6%8B%89%E4%BC%AF%E6%95%B0%E5%AD%97%E7%9B%B8%E4%BA%92%E8%BD%AC%E6%8D%A2/</url>
      <content type="html"><![CDATA[<h2 id="产生原因"><a href="#产生原因" class="headerlink" title="产生原因"></a>产生原因</h2><p>我们有时会需要将中文和阿拉伯数字相互转换。<br>但中文数字并非单纯像电话号码一样一一对应解读，会出现一百零五万三千零伍拾这样的问题。</p><h3 id="中文解读有趣的例子"><a href="#中文解读有趣的例子" class="headerlink" title="中文解读有趣的例子"></a>中文解读有趣的例子</h3><p>这是我在解读月份时发现的有趣例子。<br>两位数中十的解读:</p><table><thead><tr><th style="text-align:center">情况</th><th style="text-align:center">中文</th><th style="text-align:center">阿拉伯数字</th><th style="text-align:center">解读说明</th></tr></thead><tbody><tr><td style="text-align:center">十在首位</td><td style="text-align:center">十一</td><td style="text-align:center">11</td><td style="text-align:center">十解读为1</td></tr><tr><td style="text-align:center">十在中间</td><td style="text-align:center">三十一</td><td style="text-align:center">31</td><td style="text-align:center">十不解读</td></tr><tr><td style="text-align:center">十在末尾</td><td style="text-align:center">二十</td><td style="text-align:center">20</td><td style="text-align:center">十解读为0</td></tr><tr><td style="text-align:center">十单独出现</td><td style="text-align:center">十</td><td style="text-align:center">10</td><td style="text-align:center">十解读为10</td></tr></tbody></table><hr><p>并且我的工作环境下，大量数据的录入可能存在数据源填写错误的情况，比如一白〇而时(120)的情况。<br>所以也在Util中加了容错的数组(可自行扩充)判断。<br><a id="more"></a></p><h2 id="API说明"><a href="#API说明" class="headerlink" title="API说明"></a>API说明</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 中文 --&gt; 阿拉伯数字</span></span><br><span class="line">String num = NumberUtil.parse(chineseNum);</span><br><span class="line"><span class="comment">// 阿拉伯数字 --&gt; 中文</span></span><br><span class="line">String chineseNum = NumberUtil.format(num);</span><br><span class="line"><span class="comment">// 阿拉伯数字 --&gt; 中文年</span></span><br><span class="line">String chineseYear = NumberUtil.getChineseYear(num);</span><br></pre></td></tr></table></figure><h2 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Hashtable;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> sean22</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2018/1/19/019.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NumberUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String[] chinese=&#123;<span class="string">"零"</span>,<span class="string">"一"</span>,<span class="string">"二"</span>,<span class="string">"三"</span>,<span class="string">"四"</span>,<span class="string">"五"</span>,<span class="string">"六"</span>,<span class="string">"七"</span>,<span class="string">"八"</span>,<span class="string">"九"</span>&#125;;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String[] replace=&#123;<span class="string">"|〇"</span>,<span class="string">"|壹"</span>,<span class="string">"|贰"</span>,<span class="string">"|叁"</span>,<span class="string">"|肆"</span>,<span class="string">"|伍"</span>,<span class="string">""</span>,<span class="string">""</span>,<span class="string">""</span>,<span class="string">""</span>&#125;;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Hashtable&lt;Character,Long&gt; digits = <span class="keyword">new</span> Hashtable();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String[] commonDigit =&#123;<span class="string">""</span>,<span class="string">"十"</span>,<span class="string">"百"</span>,<span class="string">"千"</span>&#125;;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String[] twiceDigit = &#123;<span class="string">"万"</span>,<span class="string">"亿"</span>,<span class="string">"兆"</span>&#125;;</span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        digits.put(<span class="string">'十'</span>,<span class="number">10L</span>);</span><br><span class="line">        digits.put(<span class="string">'百'</span>,<span class="number">100L</span>);</span><br><span class="line">        digits.put(<span class="string">'千'</span>,<span class="number">1000L</span>);</span><br><span class="line">        digits.put(<span class="string">'万'</span>,<span class="number">10000L</span>);</span><br><span class="line">        digits.put(<span class="string">'亿'</span>,<span class="number">100000000L</span>);</span><br><span class="line">        digits.put(<span class="string">'兆'</span>,<span class="number">10000000000000000L</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 可用于处理年份(如二〇一六)及多位数字</span></span><br><span class="line"><span class="comment">     * 若需添加错字验证，可在replace中对应位置放置；以|隔开</span></span><br><span class="line"><span class="comment">     * 若需添加更高位运算，请在digits中put相应元素，并注意修改long</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> chineseNum</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">parse</span><span class="params">(String chineseNum)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>,len=chinese.length;i&lt;len;i++)&#123;</span><br><span class="line">            chineseNum =chineseNum.replaceAll(chinese[i]+replace[i],Integer.toString(i));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(chineseNum.matches(<span class="string">"[0-9]+"</span>))&#123;</span><br><span class="line">            <span class="keyword">return</span> chineseNum;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//十六处理为一十六</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="string">"十"</span>.equals(chineseNum.substring(<span class="number">0</span>,<span class="number">1</span>)))&#123;</span><br><span class="line">            chineseNum = <span class="string">"1"</span>.concat(chineseNum);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">char</span>[] cNums = chineseNum.toCharArray();</span><br><span class="line">        <span class="keyword">return</span> getNum(cNums);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 算法思路：</span></span><br><span class="line"><span class="comment">     * 倒序累加数字乘以其叠加倍数，</span></span><br><span class="line"><span class="comment">     * 如3千8百万亿中,</span></span><br><span class="line"><span class="comment">     * 3的叠加倍数(multi)是一千万亿,当前倍数(current)是一千,基数(base)是一万亿</span></span><br><span class="line"><span class="comment">     * 8的叠加倍数       是一百万亿,当前倍数         是一百,基数      是一万亿</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">getNum</span><span class="params">(<span class="keyword">char</span>[] cNums)</span></span>&#123;</span><br><span class="line">        <span class="keyword">long</span> sum =<span class="number">0</span>,multi = <span class="number">1</span>,current,last=<span class="number">1</span>,base=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=cNums.length-<span class="number">1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">            <span class="keyword">if</span>(cNums[i]&gt;<span class="string">'9'</span>)&#123;</span><br><span class="line">                current = digits.get(cNums[i]);</span><br><span class="line">                <span class="comment">//当前倍数比基数大，则更新叠加倍数和基数为当前倍数</span></span><br><span class="line">                <span class="keyword">if</span>(current&gt;base)&#123;</span><br><span class="line">                    base = current;</span><br><span class="line">                    current = <span class="number">1</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    base = getBase(current, last, base);</span><br><span class="line">                &#125;</span><br><span class="line">                multi = current * base;</span><br><span class="line">                last = current;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                sum += (cNums[i]-<span class="string">'0'</span>)*multi;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> String.valueOf(sum);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 如果当前倍数突然比上个倍数少，说明已进入到上个倍数的子倍数</span></span><br><span class="line"><span class="comment">     * 则更新叠加倍数为上个倍数</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * 比较基数和上个倍数</span></span><br><span class="line"><span class="comment">     *      基数&gt;上个倍数时(如三百万亿,读取到百时，base(亿)&gt;last(万))</span></span><br><span class="line"><span class="comment">     *          则更新基数为万亿</span></span><br><span class="line"><span class="comment">     *      基数&lt;上个倍数时(如三十亿零六十万，</span></span><br><span class="line"><span class="comment">     * 读取到十时进入，last(万)&gt;base(1)，更新基数为万</span></span><br><span class="line"><span class="comment">     * 读取到十时再次进入，last(亿)&gt;base(万),更新基数为亿</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">long</span> <span class="title">getBase</span><span class="params">(<span class="keyword">long</span> current,<span class="keyword">long</span> last,<span class="keyword">long</span> base)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(current&lt;last) &#123;</span><br><span class="line">            base = base &gt; last? base*last :last;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> base;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将阿拉伯数字转换为中文</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> number</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">format</span><span class="params">(<span class="keyword">long</span> number)</span></span>&#123;</span><br><span class="line">        <span class="comment">//千以上位计数器</span></span><br><span class="line">        <span class="keyword">int</span>[] twiceDigitCounter =<span class="keyword">new</span> <span class="keyword">int</span>[twiceDigit.length];</span><br><span class="line">        String numStr = simpleFormat(number);</span><br><span class="line">        <span class="comment">//&#123;三,零,零,零,零,五&#125;</span></span><br><span class="line">        <span class="keyword">char</span>[] nums = numStr.toCharArray();</span><br><span class="line">        StringBuffer addDigit = <span class="keyword">new</span> StringBuffer(nums.length*<span class="number">2</span>);</span><br><span class="line">        <span class="keyword">int</span> index =<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">boolean</span> appendZero = <span class="keyword">false</span>;</span><br><span class="line">        <span class="comment">//倒序装载十百千，若遇千位以上，特殊处理(getDigitByCounter)</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=nums.length-<span class="number">1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">            <span class="keyword">if</span>(appendZero&amp;&amp;lastIsNum(addDigit))&#123;</span><br><span class="line">                addDigit.append(<span class="string">"零"</span>);</span><br><span class="line">                appendZero = <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (index == commonDigit.length) &#123;</span><br><span class="line">                String current = getDigitByCounter(twiceDigitCounter);</span><br><span class="line">                String last = getLast(addDigit);</span><br><span class="line">                <span class="keyword">if</span>(indexOf(last)&lt;indexOf(current))&#123;</span><br><span class="line">                    addDigit.delete(addDigit.length()-<span class="number">1</span>,addDigit.length());</span><br><span class="line">                &#125;</span><br><span class="line">                addDigit.append(current);</span><br><span class="line">                index=<span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(nums[i]==<span class="string">'零'</span>) &#123;</span><br><span class="line">                appendZero =<span class="keyword">true</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (index != commonDigit.length) &#123;</span><br><span class="line">                    addDigit.append(commonDigit[index]);</span><br><span class="line">                &#125;</span><br><span class="line">                addDigit.append(nums[i]);</span><br><span class="line">            &#125;</span><br><span class="line">            index++;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> addDigit.reverse().toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 200173518 简单转换为 二零零一七三五一八</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> number</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">simpleFormat</span><span class="params">(<span class="keyword">long</span> number)</span></span>&#123;</span><br><span class="line">        String numStr = String.valueOf(number);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>,len=chinese.length;i&lt;len;i++)&#123;</span><br><span class="line">            numStr =numStr.replaceAll(Integer.toString(i),chinese[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> numStr;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 转换为中文的年</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getChineseNumYear</span><span class="params">(<span class="keyword">long</span> number)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(number&lt;<span class="number">2000</span>||number&gt;<span class="number">2100</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">"日期格式错误"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> simpleFormat(number);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 万出现两次则为亿，亿出现两次则为兆</span></span><br><span class="line"><span class="comment">     * 因此，千位以上从万计数，</span></span><br><span class="line"><span class="comment">     * 若万没出现过，则为万。</span></span><br><span class="line"><span class="comment">     * 若万出现过，则置万为没出现过，进位到亿</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">getDigitByCounter</span><span class="params">(<span class="keyword">int</span>[] twiceDigitCounter)</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>,len=twiceDigit.length;i&lt;len;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(twiceDigitCounter[i]==<span class="number">0</span>)&#123;</span><br><span class="line">                twiceDigitCounter[i]=<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">return</span> twiceDigit[i];</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(twiceDigitCounter[i]==<span class="number">1</span>)&#123;</span><br><span class="line">                twiceDigitCounter[i]=<span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        twiceDigitCounter[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> twiceDigit[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 得到最后一位</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> addDigit</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">getLast</span><span class="params">(StringBuffer addDigit)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(addDigit.length()==<span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> addDigit.substring(addDigit.length()-<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 万亿兆。。。的位置</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> digit</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">indexOf</span><span class="params">(String digit)</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>,len=twiceDigit.length;i&lt;len;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(twiceDigit[i].equals(digit))&#123;</span><br><span class="line">                <span class="keyword">return</span> i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> twiceDigit.length;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 最后一位是否为非零数字(不可为万/亿等计位符)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> addDigit</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">lastIsNum</span><span class="params">(StringBuffer addDigit)</span></span>&#123;</span><br><span class="line">        String last =getLast(addDigit);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,len=chinese.length;i&lt;len;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(chinese[i].equals(last))&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试代码"><a href="#测试代码" class="headerlink" title="测试代码"></a>测试代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//测试年份及错别字</span></span><br><span class="line">        System.out.println(NumberUtil.parse(<span class="string">"贰〇一八"</span>));</span><br><span class="line">        System.out.println(NumberUtil.parse(<span class="string">"十六"</span>));</span><br><span class="line">        System.out.println(NumberUtil.parse(<span class="string">"二十"</span>));</span><br><span class="line">        System.out.println(NumberUtil.parse(<span class="string">"二千零四十五"</span>));</span><br><span class="line">        System.out.println(NumberUtil.parse(<span class="string">"三百二十五万零四十"</span>));</span><br><span class="line">        System.out.println(NumberUtil.parse(<span class="string">"三十亿零四十万"</span>));</span><br><span class="line">        System.out.println(NumberUtil.parse(<span class="string">"一万"</span>));</span><br><span class="line">        System.out.println(NumberUtil.parse(<span class="string">"九千万零一"</span>));</span><br><span class="line">        System.out.println(NumberUtil.parse(<span class="string">"三百万亿"</span>));</span><br><span class="line">        System.out.println(NumberUtil.parse(<span class="string">"一百二十三兆四千五百六十七万八千九百零一亿二千三百四十五万六千七百八十九"</span>));</span><br><span class="line"></span><br><span class="line">        System.out.println(NumberUtil.getChineseNumYear(<span class="number">2018</span>));</span><br><span class="line">        System.out.println(NumberUtil.format(<span class="number">16</span>));</span><br><span class="line">        System.out.println(NumberUtil.format(<span class="number">20</span>));</span><br><span class="line">        System.out.println(NumberUtil.format(<span class="number">2045</span>));</span><br><span class="line">        System.out.println(NumberUtil.format(<span class="number">3000400000L</span>));</span><br><span class="line">        System.out.println(NumberUtil.format(<span class="number">10000</span>));</span><br><span class="line">        System.out.println(NumberUtil.format(<span class="number">90000001</span>));</span><br><span class="line">        System.out.println(NumberUtil.format(<span class="number">300000000000000L</span>));</span><br><span class="line">        System.out.println(NumberUtil.format(<span class="number">1234567890123456789L</span>));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="测试结果"><a href="#测试结果" class="headerlink" title="测试结果"></a>测试结果</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">2018</span><br><span class="line">16</span><br><span class="line">20</span><br><span class="line">2045</span><br><span class="line">3250040</span><br><span class="line">3000400000</span><br><span class="line">10000</span><br><span class="line">90000001</span><br><span class="line">300000000000000</span><br><span class="line">1234567890123456789</span><br><span class="line">二零一八</span><br><span class="line">一十六</span><br><span class="line">二十</span><br><span class="line">二千零四十五</span><br><span class="line">三十亿零四十万</span><br><span class="line">一万</span><br><span class="line">九千万零一</span><br><span class="line">三百万亿</span><br><span class="line">一百二十三兆四千五百六十七万八千九百零一亿二千三百四十五万六千七百八十九</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> 工具类 原创 </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
